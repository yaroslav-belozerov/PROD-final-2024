name: Android CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  validation:
    name: Validate
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2

  test:
    name: Run Unit Tests
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Unit Tests
        run: ./gradlew test

  checks:
    name: Check
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v3
      - name: Build project
        run: ./gradlew build --stacktrace

  instrumentation-tests:
    name: Instrumentation Tests ${{ matrix.os }} ${{ matrix.api-level }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        arch: [ x86, x86_64 ]
        target: [ google_apis ]
        channel: [ stable ]
        api-level: [ 27, 28, 29, 30 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v3
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.os }}-${{ matrix.target }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-load
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save -wipe-data
          disable-animations: true
          script: |
            touch emulator.log                    # create log file
            chmod 777 emulator.log                # allow writing to log file
            adb logcat >> emulator.log &          # pipe all logcat messages into log file as a background process
            ./gradlew connectedDebugAndroidTest --stacktrace
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.api-level }}-${{ matrix.arch }}-instrumentation-test-results
          path: |
            emulator.log
            ./**/build/reports/androidTests/connected/**
